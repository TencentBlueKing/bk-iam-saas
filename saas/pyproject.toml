[tool.black]
line-length = 119
target-version = ["py311"]
exclude = "(\\.mypy_cache|\\.git|migrations)"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 119
skip = [".mypy_cache", ".git", "*/migrations"]

[tool.flake8]
ignore = ["C901", "E203", "W503", "B010", "B009"]
max-line-length = 119
max-complexity = 12
format = "pylint"
show_source = true
statistics = true
count = true
exclude = [
    "*migrations*",
    "*.pyc",
    ".git",
    "__pycache__",
    "node_modules/*",
    "*/templates_module*",
    "*/bin/*",
    "*/settings/*",
    "config",
    "tests/unittest_settings.py"]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B110", "B311", "B303"]

[tool.mypy]
files = ["."]
python_version = 3.11
ignore_missing_imports = true
strict_optional = true
pretty = true
show_error_codes = true
exclude = "(^.*/config/.*|.*/settings\\.py|.*/tests/unittest_settings\\.py|.*/backend/tracing/.*)"

[[tool.mypy.overrides]]
module = [
    "*.migrations.*",
    "*.config.*",
    "*.tests.unittest_settings",
    "*.backend.tracing.*",
    "*.settings"]
ignore_errors = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.unittest_settings"
addopts = "--disable-pytest-warnings --reuse-db --nomigrations -s"
python_files = "*_tests.py"
testpaths = ["tests"]

[tool.poetry]
name = "bk_iam_saas"
description = "IAM（Identity and Access Management） is centralized authority management services provided by Blueking, which is used for centralized access of various Platforms and SaaS within the BlueKing System, and provides access control for resources that are refined to specific resource instance."
license = "MIT License"
authors = ["TencentBlueKing <contactus_bk@tencent.com>"]
version = "0.0.0"

[tool.poetry.dependencies]
python = "3.11.11"
Django = "4.2.19"
pymysql = "1.1.1"
MarkupSafe = "2.1.1"
requests = "2.32.3"
celery = "5.2.7"
python-json-logger = "0.1.7"
whitenoise = "5.1.0"
six = "1.17.0"
httplib2 = "0.22.0"
djangorestframework = "3.15.1"
django-filter = "2.4.0"
django-cors-headers = "3.4.0"
Werkzeug = "2.1.1"
drf-yasg = "1.21.4"
pydantic = "1.9.2"
PyJWT = "2.8.0"
cryptography = "42.0.5"
django-prometheus = "2.2.0"
pytz = "2022.6"
aenum = "2.2.6"
"dogpile.cache" = "0.9.2"

[tool.poetry.group.dev.dependencies]
toml = "0.10.1"
pyproject-flake8 = "^6.1.0"
flake8-comprehensions = "^3.5.0"
pytest = "8.3.5"
pytest-django = "4.8.0"
django-dynamic-fixture = "3.1.1"
converge = "0.9.8"
mock = "1.0.1"
black = "21.7b0"
mypy = "0.910"
types-requests = "^2.25.0"
isort = "^5.9.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
